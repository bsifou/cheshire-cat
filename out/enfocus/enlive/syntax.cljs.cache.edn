{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name enfocus.enlive.syntax, :imports nil, :requires nil, :uses nil, :defs {attr-contains {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 48, :column 7, :end-line 48, :end-column 20, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr-contains, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}, attr= {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 38, :column 7, :end-line 38, :end-column 12, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr=, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}, but {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 72, :column 7, :end-line 72, :end-column 10, :arglists (quote ([& sel])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(sel)], :arglists ([& sel]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/but, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(sel)], :arglists ([& sel]), :arglists-meta (nil)}, :method-params [(sel)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists ([& sel])}, attr? {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 35, :column 7, :end-line 35, :end-column 12, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr?, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}, nth-child {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 56, :column 7, :end-line 56, :end-column 16, :arglists (quote ([x] [x y])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}}, :name enfocus.enlive.syntax/nth-child, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}, :method-params ([x] [x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x y])}, nth-of-type {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([x] [x y])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}}, :name enfocus.enlive.syntax/nth-of-type, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}, :method-params ([x] [x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x y])}, attr-has {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 40, :column 7, :end-line 40, :end-column 15, :arglists (quote ([x & vals])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x vals)], :arglists ([x & vals]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr-has, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(x vals)], :arglists ([x & vals]), :arglists-meta (nil)}, :method-params [(x vals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists ([x & vals])}, attr-starts {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr-starts, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}, convert {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([sel]))}, :name enfocus.enlive.syntax/convert, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 14, :method-params ([sel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sel]))}, nth-last-child {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 60, :column 7, :end-line 60, :end-column 21, :arglists (quote ([x] [x y])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}}, :name enfocus.enlive.syntax/nth-last-child, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}, :method-params ([x] [x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x y])}, attr-pairs {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 31, :column 8, :end-line 31, :end-column 18, :private true, :arglists (quote ([op elms]))}, :private true, :name enfocus.enlive.syntax/attr-pairs, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 18, :method-params ([op elms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([op elms]))}, sel-to-string {:name enfocus.enlive.syntax/sel-to-string, :file "out/enfocus/enlive/syntax.cljs", :line 6, :column 1, :end-line 6, :end-column 23, :declared true, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 6, :column 10, :end-line 6, :end-column 23, :declared true}}, sel-to-str {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([input]))}, :name enfocus.enlive.syntax/sel-to-str, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 17, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input]))}, attr-ends {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr-ends, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}, nth-last-of-type {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 68, :column 7, :end-line 68, :end-column 23, :arglists (quote ([x] [x y])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}}, :name enfocus.enlive.syntax/nth-last-of-type, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x y]), :arglists ([x] [x y]), :arglists-meta (nil nil)}, :method-params ([x] [x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x y])}, nth-op {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 52, :column 8, :end-line 52, :end-column 14, :private true, :arglists (quote ([op x] [op x y])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([op x] [op x y]), :arglists ([op x] [op x y]), :arglists-meta (nil nil)}}, :private true, :name enfocus.enlive.syntax/nth-op, :variadic false, :file "out/enfocus/enlive/syntax.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([op x] [op x y]), :arglists ([op x] [op x y]), :arglists-meta (nil nil)}, :method-params ([op x] [op x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists ([op x] [op x y])}, attr|= {:protocol-inline nil, :meta {:file "/home/biris/clojure/cheshire-cat/out/enfocus/enlive/syntax.cljs", :line 50, :column 7, :end-line 50, :end-column 13, :arglists (quote ([& elms])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}}, :name enfocus.enlive.syntax/attr|=, :variadic true, :file "out/enfocus/enlive/syntax.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(elms)], :arglists ([& elms]), :arglists-meta (nil)}, :method-params [(elms)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists ([& elms])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:default}, :order [:default]}, :doc nil}